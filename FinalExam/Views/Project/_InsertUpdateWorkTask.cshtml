@model FinalExamModels.WorkTask


@{
    IEnumerable<SelectListItem> states = ViewBag.states;
    IEnumerable<SelectListItem> users = ViewBag.users;
    int id = ViewBag.workItemID;
    int edit = (ViewBag.Edit != null) ? ViewBag.Edit : 0;
}



<div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Modal Header</h4>
        </div>
        <div class="modal-body">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>WorkTask</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.Hidden("WorkItemID", id)
                    @Html.HiddenFor(model => model.TaskID)


                    <div class="form-group">
                        @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StateID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.StateID,states, "Pilih State", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Assigned To", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.UserID,  users  ,"Pilih User", htmlAttributes: new { @class = "form-control" } )
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @if (edit != 1)
                            {
                            <input type="submit" value="Create" class="btn btn-default" />
                            }
                            else
                            {
                                <input type="submit" value="Edit" class="btn btn-default" />
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>


