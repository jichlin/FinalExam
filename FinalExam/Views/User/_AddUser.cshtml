@model FinalExamModels.User

@{
    IEnumerable<SelectListItem> roles = ViewBag.roles;
    int edit = (ViewBag.Edit != null) ? ViewBag.Edit : 0;

}

<div class="modal-dialog">
    <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Modal Header</h4>
        </div>
        <div class="modal-body">
            @using (Html.BeginForm("addUser", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.UserID);

                <div class="form-horizontal">
                    <h4>User</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Username", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @if (edit != 1)
                            {
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            }
                            else
                            {
                                @Html.ValueFor(model => model.UserName);
                                @Html.HiddenFor(model => model.UserName);
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.UserPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.Label("Role", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.RolesID, new SelectList(roles, "Value", "Text"), "Pilih Roles", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.Label("Picture", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @if (Model != null)
                            {
                                <img src="@Model.ImagePath" />
                            }
                            else
                            {
                                <img src="~/ProfilePic/default.png" id="preview" />
                            }
                            <input type="file" name="ImageFile" id="imgInput"/>
                            @Html.HiddenFor(model => model.ImagePath);
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.UserStatus, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.UserStatus)
                                <p>Active</p>
                                @Html.ValidationMessageFor(model => model.UserStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @if (edit != 1)
                            {
                                <input type="submit" value="Create" class="btn btn-default" />
                            }
                            else
                            {
                                <input type="submit" value="Edit" class="btn btn-default" />
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>

<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#preview').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#imgInput").change(function () {
        readURL(this);
    });
</script>
